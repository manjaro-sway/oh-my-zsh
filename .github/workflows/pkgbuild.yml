name: pkgbuild

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main

jobs:
  prepare:
    runs-on: ubuntu-20.04
    name: prepare
    steps:
      - uses: actions/checkout@v2.3.4
      - name: check-updatable
        id: check
        run: |
          VERSION=$(cat PKGBUILD | grep pkgver= | sed -e 's/^pkgver=//' | awk '{print $1}')-$(cat PKGBUILD | grep pkgrel= | sed -e 's/^pkgrel=//' | awk '{print $1}')
          echo "ARCHITECTURES=$(cat PKGBUILD | grep arch= | sed -e 's/^arch=(\(.*\))/\1/')" >>$GITHUB_ENV
          echo "VERSION=${VERSION}" >>$GITHUB_ENV
          git fetch --tags
          git rev-list "${VERSION}" >/dev/null && \
            echo "::set-output name=updatable::false" || \
            echo "::set-output name=updatable::true"
    outputs:
      updatable: ${{ steps.check.outputs.updatable }}
      architectures: ${{ env.ARCHITECTURES }}
      version: ${{ env.VERSION }}
  pkgbuild:
    runs-on: ubuntu-20.04
    name: ${{ matrix.distro }} ${{ matrix.arch }}
    needs: [prepare]
    if: ${{ needs.prepare.outputs.updatable == 'true' }}
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: manjaro_latest
            archlinux_arch: aarch64
          - arch: amd64
            distro: manjaro_latest
            archlinux_arch: x86_64
    steps:
      - uses: actions/checkout@v2.3.4
      - name: get-additional-gpg
        run: |
          echo ${{ secrets.GPG_KEYID }} >>.github/additional_gpg
          echo "ADDITIONAL_GPG=$(cat .github/additional_gpg)" >>$GITHUB_ENV
      - name: any-build
        if: ${{ ( contains(needs.prepare.outputs.architectures, 'any') && matrix.archlinux_arch == 'x86_64' ) }}
        run: echo "BUILD=true" >>$GITHUB_ENV
      - name: arch-build
        if: ${{ contains(needs.prepare.outputs.architectures, matrix.archlinux_arch) }}
        run: echo "BUILD=true" >>$GITHUB_ENV
      - uses: Manjaro-Sway/run-on-arch-action@master
        if: ${{ env.BUILD == 'true' }}
        name: build
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            --cap-add=SYS_ADMIN
          shell: /bin/sh
          install: |
            for key in "${{ env.ADDITIONAL_GPG }}";do
              sudo -u builder gpg --keyserver keys.openpgp.org --recv-key $key
            done
            sudo -u builder gpg --keyserver keys.openpgp.org --recv-key ${{ secrets.GPG_KEYID }}
            pacman-key --keyserver keys.openpgp.org --recv-keys ${{ secrets.GPG_KEYID }}

            sed -i '/^\[core\]/i \[manjaro-sway\]\nSigLevel = Optional TrustAll\nServer = https://packages.manjaro-sway.download/$arch\n' /etc/pacman.conf
            pacman-mirrors --geoip
            pacman -U --noconfirm https://mirror.f4st.host/archlinux/core/os/x86_64/archlinux-keyring-20210802-1-any.pkg.tar.zst
          run: |
            pacman -Syy
            chown builder $PWD
            sudo -u builder makepkg -fsAc --noconfirm --noprogressbar
            cp *.pkg.tar.zst* /artifacts/
      - name: determine-filename
        if: ${{ env.BUILD == 'true' }}
        run: echo "FILE_NAME=$(basename $(find ./artifacts/ -type f  \( -name "*.pkg.tar.zst" \)))" >> $GITHUB_ENV
      - name: sign
        if: ${{ env.BUILD == 'true' }}
        run: |
          # import signing key (no passphrase)
          cat <(echo -e "${{ secrets.GPG_SECRET_KEY_BASE64 }}" | base64 --decode) | gpg --batch --import
          gpg --pinentry-mode loopback --detach-sign ./artifacts/${{ env.FILE_NAME }}
      - name: release
        if: ${{ env.BUILD == 'true' }}
        run: |
          echo ${{ github.token }} | gh auth login --with-token
          gh release create ${{ needs.prepare.outputs.version }} --repo ${{ github.repository }} --notes "automated release" || echo "release already exists"
          gh release upload ${{ needs.prepare.outputs.version }} --repo ${{ github.repository }} --clobber \
            ./artifacts/${{ env.FILE_NAME }} ./artifacts/${{ env.FILE_NAME }}.sig
      - name: dispatch
        if: ${{ env.BUILD == 'true' }}
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.DISPATCH }}
          repository: manjaro-sway/packages
          event-type: package_update
          client-payload: '{ "repository": "${{ github.repository }}", "version": "${{ needs.prepare.outputs.version }}", "file_name": "${{ env.FILE_NAME }}"}'
